

data Position_Type
end Position_Type;

process Gps_Sender
features
  Position : out data port Position_Type;
  SecondaryPosition : in data port Position_Type;

end Gps_Sender;

process implementation Gps_Sender.Basic
end Gps_Sender.Basic;

process implementation Gps_Sender.Secure
end Gps_Sender.Secure;

system Gps
features
  Position : out data port Position_Type;
  Init_Done : in event port;
  Backup_Stopped : in event port;
  Main_Stopped : in event port;
  All_OK : in event port;
  Run_Secure : in event port;
  Run_Normal : in event port;

end Gps;

system implementation Gps.Dual
subcomponents
  Main_Gps : process Gps_Sender.Basic

    in modes (Dualmode, Mainmode);
  Backup_Gps : process Gps_Sender.Basic

    in modes (Dualmode, Backupmode);

connections
  data port Main_Gps.Position -> Position
    in modes (Dualmode, Mainmode);
  data port Backup_Gps.Position -> Position
    in modes (Backupmode);
  data port Backup_Gps.Position -> Main_Gps.SecondaryPosition
    in modes (Dualmode);

modes
  Initialize : initial mode;
  Dualmode : mode;
  Mainmode : mode;
  Backupmode : mode;
  Initialize -[ Init_Done ]-> Dualmode;
  Dualmode -[ Backup_Stopped ]-> Mainmode;
  Dualmode -[ Main_Stopped ]-> Backupmode;
  Mainmode, Backupmode -[ All_Ok ]-> Dualmode;

end Gps.Dual;

system implementation Gps.Secure extends Gps.Dual
subcomponents
  Secure_Gps : process Gps_Sender.Secure

    in modes (Securemode);

connections
  data port Secure_Gps.Position -> Position
    in modes (Securemode);

modes
  Securemode : mode;
  SingleSecuremode : mode;
  Dualmode -[ Run_Secure ]-> Securemode;
  Securemode -[ Run_Normal ]-> Dualmode;
  Securemode -[ Backup_Stopped ]-> SingleSecuremode;
  SingleSecuremode -[ Run_Normal ]-> Mainmode;
  Securemode -[ Main_Stopped ]-> Backupmode;

end Gps.Secure;

