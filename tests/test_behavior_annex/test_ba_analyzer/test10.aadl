-- This example gives a basic implementation of a stack data type associated 
-- with its access methods. The various corresponding AADL component 
-- specifications are encompassed within a same package to offer an Object-
-- Oriented Class style.

package BA_example2 public
with Base_Types;

  data stack
  end stack;

  data implementation stack.default
    subcomponents
      elems : data Base_Types::Integer [100];
      sp : data Base_Types::Integer;
  end stack.default;

  subprogram push
    features
      this : in out parameter stack.default;
      v : in parameter Base_Types::Integer;
      overflow : out event port;
  end push;

  subprogram pop
    features
      this : in out parameter stack.default;
      v : out parameter Base_Types::Integer;
      underflow : out event port;
  end pop;


  subprogram implementation push.default
  annex behavior_specification {**
 -- Errors : Local variables must be explicitly typed
 --          with a valid data component classifier
 --          (pop) is not of type Data.


    variables
      t : pop;
    states
      s0 : initial final state;
  **};
  end push.default;


end BA_example2;
