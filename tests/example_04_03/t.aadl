
package FileSystem
public
  data Directory
  end Directory;
  data implementation Directory.hashed
  end Directory.hashed;
end FileSystem;

package App
public
  data result_type
  end  result_type;
  data Distance
  end  Distance;
end App;

package TypeExample
public
  with FileSystem;
  with App;
  system File_System
  features
    -- access to a data component
    root: requires data access FileSystem::Directory.hashed;
  end File_System;
  
  process Application
  features
    -- a data out port
    result: out data port App::result_type;
    home: requires data access FileSystem::Directory.hashed;
  end Application;
  
  thread Calculate
    prototypes
    -- A data type to be used as type for the input and result port
    data_type: data;
  features
    input: in data port data_type;
    result: out data port data_type;
  end Calculate;
  
  thread Compute_Distance extends Calculate (data_type => data App::Distance)
  end Compute_Distance;
end TypeExample;


