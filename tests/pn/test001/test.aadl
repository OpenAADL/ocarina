processor the_processor
properties
  Deployment::location => "127.0.0.1";
end the_processor;system PC_Simple
end PC_Simple;

system implementation PC_Simple.Impl
subcomponents
  pr_A : process A.Impl {Deployment::port_number => 4001;};
  pr_B : process B.Impl {Deployment::port_number => 4002;};

  CPU : processor the_processor;
connections
  data port pr_A.Alpha -> pr_B.Beta;
  data port pr_B.Alpha -> pr_A.Beta;
properties
  actual_processor_binding => reference CPU applies to pr_A;
  actual_processor_binding => reference CPU applies to pr_B;
end PC_Simple.Impl;

----------
-- Data --
----------

data Alpha_Type
properties
  Data_Model::Data_Representation => integer;
end Alpha_Type;

-----------------
-- Subprograms --
-----------------

subprogram Produce_Spg
features
  Data_Source : out parameter Alpha_Type;
end Produce_Spg;

subprogram implementation Produce_Spg.Impl
properties
  source_language => Ada95;
  source_name     => "Producer_Consumer.Produce_Spg";
end Produce_Spg.Impl;

subprogram Consume_Spg
features
  Data_Sink : in parameter Alpha_Type;
properties
  source_language => Ada95;
  source_name     => "Producer_Consumer.Consume_Spg";
end Consume_Spg;

-------------
-- Threads --
-------------

thread P
features
  Data_Source : out data port Alpha_Type;
end P;

thread implementation P.Impl
calls {
  P_Spg : subprogram Produce_Spg.Impl;
};
connections
  parameter P_Spg.Data_Source -> Data_Source;
properties
  Dispatch_Protocol => Periodic;
  Period            => 20 Ms;
end P.Impl;

thread Q
features
  Data_Sink : in data port Alpha_Type;
end Q;

thread implementation Q.Impl
calls {
  Q_Spg : subprogram Consume_Spg;
};
connections
  parameter Data_Sink -> Q_Spg.Data_Sink;
properties
  Dispatch_Protocol => Periodic;
  Period            => 20 Ms;
end Q.Impl;

---------------
-- Processes --
---------------

process A
features
  Alpha : out data port Alpha_Type;
  Beta  : in data port Alpha_Type;
end A;

process implementation A.Impl
subcomponents
  Producer        : thread P.Impl;
  Result_Consumer : thread Q.Impl;
connections
  data port Producer.Data_Source -> Alpha;
  data port Beta -> Result_Consumer.Data_Sink;
end A.Impl;

process B
features
  Alpha : out data port Alpha_Type;
  Beta  : in data port Alpha_Type;
end B;

process implementation B.Impl
subcomponents
  Consumer        : thread Q.Impl;
  Result_Producer : thread P.Impl;
connections
  data port Beta -> Consumer.Data_Sink;
  data port Result_Producer.Data_Source -> Alpha;
end B.Impl;
