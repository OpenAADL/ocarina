/*****************************************************************************
**                                                                          **
**                           OCARINA COMPONENTS                             **
**                                                                          **
**      O C A R I N A . B A C K E N D S . X M L _ T R E E . N O D E S       **
**                                                                          **
**                 Copyright (C) 2008, GET-Telecom Paris.                   **
**                                                                          **
** Ocarina  is free software;  you  can  redistribute  it and/or  modify    **
** it under terms of the GNU General Public License as published by the     **
** Free Software Foundation; either version 2, or (at your option) any      **
** later version. Ocarina is distributed  in  the  hope  that it will be    **
** useful, but WITHOUT ANY WARRANTY;  without even the implied warranty of  **
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General **
** Public License for more details. You should have received  a copy of the **
** GNU General Public License distributed with Ocarina; see file COPYING.   **
** If not, write to the Free Software Foundation, 51 Franklin Street, Fifth **
** Floor, Boston, MA 02111-1301, USA.                                       **
**                                                                          **
** As a special exception,  if other files  instantiate  generics from this **
** unit, or you link  this unit with other files  to produce an executable, **
** this  unit  does not  by itself cause  the resulting  executable to be   **
** covered  by the  GNU  General  Public  License. This exception does not  **
** however invalidate  any other reasons why the executable file might be   **
** covered by the GNU Public License.                                       **
**                                                                          **
**                 Ocarina is maintained by the Ocarina team                **
**                       (ocarina-users@listes.enst.fr)                     **
**                                                                          **
*****************************************************************************/

module Ocarina::Backends::XML_Tree::Nodes {

  /******************/
  /* Internal types */
  /******************/

  typedef octet   Operator_Id;
  typedef long    Name_Id;
  typedef long    Value_Id;

  /******************/
  /* Internal nodes */
  /******************/

  interface Node_Id {
    Node_Id    Next_Node;
    Node_Id    Frontend_Node;
  };

  interface Definition : Node_Id {
    Node_Id    Defining_Identifier;
  };

  interface XML_Comment : Definition {};

  interface Literal : Node_Id {
    Value_Id   Value;
  };

  interface Assignement : Node_Id {
    Node_Id Left_Expression;
    Node_Id Right_Expression;
  };

  interface List_Id {
    Node_Id    First_Node;
    Node_Id    Last_Node;
  };

  interface Defining_Identifier : Node_Id {
    Name_Id    Name;
    Node_Id    Corresponding_Node;
    Node_Id    Compile_Unit;
  };

  interface XML_File : Definition {
    Node_Id    Distributed_Application_Unit;
    Node_Id    Root_Node;
    boolean    Is_HTML;
    Node_Id    XML_DTD;   // Identifier referring to XML file DTD
  };

  interface XML_Node : Definition
  {
   List_Id  Items;
   List_Id  Subitems;
   Node_Id  Node_Value;
  };

  /* Interfaces for the PolyORB-HI module */

  interface HI_Distributed_Application : Node_Id {
    Name_Id    Name;
    List_Id    Units;
    List_Id    HI_Nodes;
  };

  interface HI_Node : Node_Id {
    Name_Id    Name;
    List_Id    Units;
    Node_Id    Distributed_Application;
  };

  /* This is the root node of the packages generated specifically for
     an PolyORB-HI Distributed application */

  interface HI_Unit : Node_Id {
    Node_Id    Entity;
    Node_Id    XML_File;
  };
 
   interface Base_Type {
      Name_Id     Image;
   };
 
   interface Container : Node_Id {
      Node_Id     Content;
   };

   interface _String : Base_Type {};
   interface _Numeric : Base_Type {};
   interface _Float : Base_Type {};

   interface HI_Tree_Bindings : Node_Id {
      Node_Id    Unit;
      Node_Id    Node;
      List_Id    Processes;
   };


};
