property set Taste is
   Interface_Coordinates : aadlstring applies to (subprogram access, bus access);

   Coordinates : aadlstring applies to
		(system, package, device, memory, processor, process, access,
       subprogram access, connection, bus, virtual bus, feature group);

   Fill_Color : aadlstring applies to
   (system, device, processor, process, bus);

   HWLibraries : list of aadlstring applies to(package);

   Data_Transport : enumeration (legacy,asn1) applies to (device, abstract);

   Importance: enumeration (low, medium, high) applies to (system, subprogram access, access);

	APLC_Binding : list of reference (process) applies to (process, device, system);

   APLC_Properties : record
      (APLC : aadlstring;
       Coordinates : aadlstring;
       Source_Language: Supported_Source_Language;) applies to (process);

	ASN1_types: type enumeration
    	(asequenceof,
     	 asequence,
       aenumerated,
       aset,
       asetof,
       ainteger,
       aboolean,
       areal,
       achoice,
       aoctetstring,
       astring);

   ASN1_Basic_Type : Taste::ASN1_types applies to (data);

FS_Default_Value : aadlstring applies to (data);

	Deadline : inherit Time => Period
	applies to (thread,
              thread group,
              process,
              system,
              device,
				  subprogram access);

----------------------------
-- Types and enumerations --
----------------------------

Max_Priority_Value : constant aadlinteger => 28;
--  Parametric example of maximum priority

--  Priority and Interrupt Priority are contiguous intervals

Min_Interrupt_Priority_Value : constant aadlinteger => 29;
Max_Interrupt_Priority_Value : constant aadlinteger => 31;
--  Maximum and minimum interrupt priority

--  Removed, these types have been defined in AADLv2 standard property
--  set Thread_Properties

--  Priority_Type : type aadlinteger 0 .. value (Max_Priority_Value);
--  --  We must define a property type to be able to reference it

--  Priority : Priority_Type applies to
--    (thread,
--     thread group,
--     process);

--  Interrupt_Priority :  aadlinteger
--    value(Min_Interrupt_Priority_Value) .. value
--        (Max_Interrupt_Priority_Value) applies to
--    (thread,
--     thread group,
--     process);

Criticality_Level_Type : type enumeration (A, B, C, D, E);
-- Criticality levels

Transmission_Type : type enumeration
  (simplex,
   half_duplex,
   full_duplex);
--  Message transmission kind

Frequency : type aadlinteger 0 Hz .. Max_Aadlinteger
   units (
    Hz,
    KHz    => Hz  * 1000,
    MHz    => KHz * 1000,
    GHz    => MHz * 1000);
--  Frequency of a processor

---------------
-- Partition --
---------------

Criticality : Taste::Criticality_Level_Type applies to (process, system);
Local_Scheduling_Policy : Supported_Scheduling_Protocols
  applies to (process, system);
Time_Budget : aadlinteger applies to (process, system);
Budget_Replenishment_Period : Time applies to (process, system);
Storage_Budget : Size applies to (process, system);
--  XXX replace this with Source_Code_Size ?

------------
-- RCM VM --
------------

--  Min_Priority : Priority_Type applies to (processor);
--  Max_Priority : Priority_Type applies to (processor);
--  Min_Interrupt_Priority : Priority_Type applies to (processor);
--  Max_Interrupt_Priority : Priority_Type applies to (processor);

--   To express the Global scheduling policy, we use the standard
--   property Global_Scheduler_Policy of type
--   Supported_Scheduling_Protocols.

Longest_Critical_Section : Time applies to (processor);

--  To describe the clock period we use the standard property
--  Clock_Period of standard type Time.

Periodic_Clock_Interrupt_Period : Time applies to (processor);
Periodic_Clock_Handler : Time applies to (processor);
Demanded_Clock_Handler : Time applies to (processor);
Interrupt_Handler : Time applies to (processor);
External_Interrupt : Time applies to (processor);
Wakeup_Jitter : Time applies to (processor);
Ready : Time applies to (processor);
Select : Time applies to (processor);
Context_Switch  : Time applies to (processor);
Signal : Time applies to (processor);
Suspension_Call  : Time applies to (processor);
Wait_Call  : Time applies to (processor);
Priority_Raising  : Time applies to (processor);
Priority_Lowering  : Time applies to (processor);
Barrier_Evaluation  : Time applies to (processor);
Budget_Replenishment_Overhead : Time applies to (processor);
Budget_Exhausted_Recovery_Call : Time applies to (processor);

-------------
-- Devices --
-------------

-- Processor

Processor_Speed : Taste::Frequency applies to (processor);
--  XXX to be replaced with AADLv2 property

-- Interconnection

--  To express the message size bounds we use the standard property
--  Allowed_Message_Size which is a range of standard type Size.

--  To describe the propagation delay and the transmission time on a
--  bus, we use the standard properties Propagation_Delay and
--  Transmission_Time.

Interconnection_Speed_Factor : aadlreal applies to (bus);
Transmission_Kind : Taste::Transmission_Type applies to (bus);

Bandwidth : Data_Volume applies to (bus);

-- Networking  protocol

-- Memory

Memory_Size : Size applies to (memory);

Access_Time : Time applies to (memory);
Access_Bandwidth : Data_Volume applies to (bus);

---------------------------
-- Deployment Properties --
---------------------------

--  To express the binding of an AP-Level container to a processor, we
--  use the standard property Actual_Processor_Binding.

--  To express the binding of a connection between a couple of
--  (provided, required) interfaces of two AP-Level containers to a
--  bus, a processor or a device, we use the standard property
--  Actual_Connection_Binding.

--  To express the binding of an AP-level container to a particular
--  memory, we use the standard property Actual_Memory_Binding.

--------------------------------------------
-- Properties relative to the RCM grammar --
--------------------------------------------

RCMoperation:  classifier(subprogram) applies to (event port, event data port);

RCMoperationKind_list: type enumeration
  (cyclic,
   sporadic,
   variator,
   protected,
   transaction,
   barrier,
   unprotected,
   deferred,
   immediate,
   any);

RCMoperationKind: Taste::RCMoperationKind_list
  applies to (event port, event data port, access, subprogram access);

RCMceiling: aadlinteger
  applies to (event port, event data port);

RCMperiod: Time applies to (event port, event data port, access, subprogram access);

RCMpartition: reference (system) applies to (system);

dataview : list of aadlstring applies to (package);

dataviewpath : list of aadlstring applies to (package);

Encoding_type : type enumeration (native, uper, acn);

Encoding : Taste::Encoding_type applies to (parameter);

Ada_Package_Name : aadlstring applies to (data);

Forbid_In_PI : aadlboolean applies to (data);

interfaceView : aadlstring applies to (package);

WCET : Time applies to (subprogram access);

Instance_Name : aadlstring applies to (system);

Associated_Queue_Size : aadlinteger applies to (subprogram);

EncodingDefinitionFile : classifier (data) applies to (data);

labelInheritance : aadlstring applies to (subprogram access);

-- new properties for TASTE-IV and TASTE-DV editors v.1.3.5 and later:

version : aadlstring applies to (package);
InterfaceName : aadlstring applies to (subprogram access, feature group);
FunctionName : aadlstring applies to (system);

-- new properties for TASTE-IV editor v.1.4 and later:

Active_Interfaces : enumeration (Enabled,Disabled,Any) => Enabled applies to (system);

end Taste;
